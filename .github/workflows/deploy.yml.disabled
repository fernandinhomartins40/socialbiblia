name: 🚀 Deploy SocialBiblia + Supabase

# Controle de concorrência - apenas um deploy por vez
concurrency:
  group: socialbiblia-deploy
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json
        
    - name: Instalar dependências
      run: |
        cd apps/web
        npm ci
        
    - name: Build frontend
      run: |
        cd apps/web
        npm run build
        
    - name: Deploy para VPS
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASSWORD }}
        script: |
          # Navegar para projeto
          cd /root/socialbiblia
          
          # Pull das mudanças
          git pull origin main
          
          # Instalar dependências frontend
          cd apps/web
          npm ci --only=production
          
          # Build do frontend
          npm run build
          
          # Iniciar/reiniciar Supabase
          cd ../../supabase
          
          # Verificar se Supabase está rodando
          if docker compose ps | grep -q "Up"; then
            echo "🔄 Reiniciando Supabase..."
            docker compose restart
          else
            echo "🚀 Iniciando Supabase..."
            docker compose up -d
          fi
          
          # Aguardar inicialização
          sleep 30
          
          # Verificar se está funcionando
          if curl -f http://31.97.85.98:3001/health 2>/dev/null; then
            echo "✅ Supabase API funcionando!"
          else
            echo "⚠️ API ainda inicializando..."
          fi
          
          echo "✅ Deploy realizado com sucesso!"
          echo "🌐 Frontend: http://31.97.85.98:3000"
          echo "🔧 Supabase: http://31.97.85.98:3001"

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notificar resultado
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "🚀 Deploy realizado com sucesso!"
        else
          echo "❌ Deploy falhou!"
        fi