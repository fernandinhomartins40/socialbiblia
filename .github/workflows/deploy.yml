name: Deploy SocialBiblia

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json
        
    - name: Instalar depend√™ncias
      run: |
        cd apps/web
        npm ci
        
    - name: Build frontend
      run: |
        cd apps/web
        npm run build
        
    - name: Deploy para VPS
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASSWORD }}
        script: |
          # Navegar para projeto
          cd /root/socialbiblia
          
          # Pull das mudan√ßas
          git pull origin main
          
          # Instalar depend√™ncias se necess√°rio
          cd apps/web
          npm ci --only=production
          
          # Build do frontend
          npm run build
          
          # Restart containers
          cd ../../supabase
          docker compose restart
          
          echo "‚úÖ Deploy realizado com sucesso!"

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notificar resultado
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "üöÄ Deploy realizado com sucesso!"
        else
          echo "‚ùå Deploy falhou!"
        fi