version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: socialbiblia-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3001}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/backend/uploads:/app/apps/backend/uploads
    networks:
      - socialbiblia-network

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.web
    container_name: socialbiblia-frontend
    restart: unless-stopped
    ports:
      - "3001:80"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3000}
      - VITE_SOCKET_URL=${VITE_SOCKET_URL:-http://localhost:3000}
    depends_on:
      - backend
    networks:
      - socialbiblia-network

  postgres:
    image: postgres:15-alpine
    container_name: socialbiblia-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-socialbiblia}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - socialbiblia-network

  redis:
    image: redis:7-alpine
    container_name: socialbiblia-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - socialbiblia-network

  nginx:
    image: nginx:alpine
    container_name: socialbiblia-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - socialbiblia-network

volumes:
  postgres_data:
  redis_data:

networks:
  socialbiblia-network:
    driver: bridge
